#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=040_stream

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$test"
tmp=tmp
script=run.pbs
csv="$BASE/results.csv"

# Only have one test in queue at a time
tst=`qstat | awk '{if ( $2 == "'$pbsname'" ) {print $0}}'`
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ngpus=1:ncpus=24:mem=96gb
#PBS -q gpu
#PBS -l walltime=0:05:00
#PBS -j oe
#PBS -P 90000001

set -e

if [ -d "\$PBS_O_WORKDIR" ] ; then cd "\$PBS_O_WORKDIR" ; fi

module load composerxe
PATH="/app/benchmarks/stream/bin:\$PATH" ; export PATH

export KMP_AFFINITY="granularity=fine,compact"

stream > /dev/null 2>&1
for i in {1..5} ; do
 stream > stream.\$PBS_JOBID.\$i.stdout 2>&1
done

metric=\`grep ^Triad: stream.\$PBS_JOBID.?.stdout | awk '{print \$2}' | sort -n | tail -n +3 | head -1\`
echo metric=\"\$metric\"
echo \$metric | awk '{if ( \$1 > 90000.0 ) {printf "PASS\n"}}' | grep PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
