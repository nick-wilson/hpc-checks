#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=129_pip_install_user

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
script=run.pbs
csv="$BASE/results.csv"

tst=""
if [ x"$MULTI" == x ] ; then
 # Only have one test in queue at a time
 qname="${pbsname:0:15}"
 tst=`qstat | awk '{if ( $2 == "'$qname'" ) {print $0}}'`
fi
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ncpus=1${SELECT_GPU}
#PBS -l walltime=0:30:00
#PBS -j oe
#PBS -P 90000001
set -e
if [ -d "\$PBS_O_WORKDIR" ] ; then cd "\$PBS_O_WORKDIR" ; fi
rm -rf \$HOME/.local \$HOME/.cache
for m in python/2.7.12 python/3.5.1 python/intel-2.7 python/intel-3.5 anaconda/2 anaconda/3 ; do
 echo \$m
 module purge
 module load \$m
 # test install of a module not currently installed
 testmodule="nifty"
 pip install --user --upgrade --quiet \$testmodule || { echo pip failed for \$m ; echo FAIL ; exit 1 ; }
 python -c "import \$testmodule" || { echo import failed for \$m ; echo FAIL ; exit 1 ; }
 # should test help('modules') but this currently fails due to dependency issues
 #python -c "help('modules')"
 rm -rf \$HOME/.local
done
rm -f gmon.out
echo PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
