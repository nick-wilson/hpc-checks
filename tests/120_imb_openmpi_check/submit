#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
nodes=2
ncpus=24
mpiprocs=$ncpus
test=120_imb_openmpi_check

# default to run on any hosts
pbsname="$test"
rnode="ncpus=${ncpus}:mpiprocs=${mpiprocs}:ompthreads=1${SELECT_GPU}:mem=96gb"
resources="select=${nodes}:${rnode}"
# run on host specified on command line
((nodes_minus1=nodes-1))
if [ $# -eq 1 ] ; then resources="select=host=${1}:${rnode}+${nodes_minus1}:${rnode}" ; pbsname="${test}_${1}" ; fi
if [ $# -eq 2 ] ; then resources="select=host=${1}:${rnode}+host=${2}:${rnode}" ; pbsname="${test}_${1}_${2}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$test"
tmp=/scratch/adm/sup/fsg3/benchmarks/workload/$test.\$PBS_JOBID
script=run.pbs
csv="$BASE/results.csv"

# Only have one test in queue at a time
tst="" #tst=`qstat | awk '{if ( $2 == "'$pbsname'" ) {print $0}}'`
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l $resources
#PBS -l walltime=0:10:00
#PBS -j oe
#PBS -P 90000001

nodes=$nodes
ppn=$mpiprocs
((total=nodes*ppn))

set -e

cd "\$PBS_O_WORKDIR" || exit \$?

module load openmpi

echo == hostname
hostname
echo == uname
uname -a
echo == rpm
rpm -qa
echo == env
env
echo == ulimit
ulimit -a
echo == sysctl
sysctl -a
echo == uptime
uptime
echo == free
free
echo === df
df /
df /var/tmp
df /var/spool/pbs/spool
df /var/spool/pbs/undelivered
df /home
df /data
df /app
df /scratch
df /seq
df /ime
echo === ofed_info
ofed_info
echo == ps
ps -ef

mpirun IMB-MPI1-check -npmin \$total
echo PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
