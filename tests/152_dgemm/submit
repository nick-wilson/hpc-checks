#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=152_dgemm
failmetric=800.0

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$test"
tmp=tmp
script=run.pbs
csv="$BASE/results.csv"

# Only have one test in queue at a time
tst="" #tst=`qstat | awk '{if ( $2 == "'$pbsname'" ) {print $0}}'`
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ncpus=24${SELECT_GPU}:mem=96gb
#PBS -l walltime=0:30:00
#PBS -j oe
#PBS -P 90000001

set -e

cd "\$PBS_O_WORKDIR"

module load composerxe/2019.0.0.117
PATH="/app/benchmarks/dgemm/bin:\$PATH" ; export PATH
export KMP_AFFINITY=compact
echo 24 core warm up
dgemm_mkl.threaded > /dev/null
for i in {0..9} ; do
 echo 24 core run \$i
 dgemm_mkl.threaded > dgemm.\$PBS_JOBID.\$i.stdout
 grep GFLOPS dgemm.\$PBS_JOBID.\$i.stdout
done
#
export OMP_NUM_THREADS=6
for c in {0..3} ; do
 echo 6 core NUMA \$c warm up
 for i in {0..2} ; do
  echo 6 core NUMA \${c} run \$i
  numactl -c \$c -m \$c dgemm_mkl.threaded > dgemm.\$PBS_JOBID.\$c.\$i.stdout
  grep GFLOPS dgemm.\$PBS_JOBID.\$c.\$i.stdout
 done
done

echo failmetric: $failmetric
metric=\`grep -h GFLOPS dgemm.\$PBS_JOBID.?.stdout | sed -e "s/GFLOPS =//" -e "s/ //g" | sort -n | tail -n 1\`
echo metric=\"\$metric\"
echo \$metric | awk '{if ( \$1 > $failmetric ) {printf "PASS\n"}}' | grep PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
