#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=051_ibreadbw
threshold=10000.0

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

q="normal"
if [ x"${1:0:3}" == xgpu ] ; then q="gpu" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

tst=""
if [ x"$MULTI" == x ] ; then
 # Only have one test in queue at a time
 qname="${pbsname:0:15}"
 tst=`qstat | awk '{if ( $2 == "'$qname'" ) {print $0}}'`
fi
if [ x"$tst" != x ] ; then exit ; fi

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$test"
tmp=tmp
script=run.pbs
csv="$BASE/results.csv"

rundir="$BASE/run/$d/${test}"
datadir="$BASE/data/$test"

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > $script
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ncpus=24:mem=96gb
#PBS -l walltime=0:10:00
#PBS -j oe
#PBS -P 90000001
#PBS -q $q

if [ -d "\$PBS_O_WORKDIR" ] ; then cd "\$PBS_O_WORKDIR" ; fi

runbench(){
 timeout 30 ssh -o ConnectTimeout=5 \$target killall ib_read_bw > /dev/null 2>&1 < /dev/null
 ssh -o ConnectTimeout=5 \$target ib_read_bw > /dev/null 2>&1 < /dev/null &
 sleep 1
 ib_read_bw \$target 
 timeout 30 ssh -o ConnectTimeout=5 \$target killall ib_read_bw > /dev/null 2>&1 < /dev/null
}

for i in 1 2 3 4 ; do
 target=nscc0\$i
 runbench > ib_read_bw.\$i.stdout 2>&1
 metric=\`grep "65536      1000" ib_read_bw.\$i.stdout | awk '{print \$3}'\`
 _tmp=\`echo \$metric | awk '{if ( \$1 > $threshold ) {printf "PASS\n"}}'\`
 if [ x"\$_tmp" == xPASS ] ; then
  echo met threshold on attempt \$i
  echo metric=\$metric
  echo PASS
  exit 0
 fi
done

echo did not meet threshold on any attempt: $threshold
echo metric=\$metric
echo FAIL
exit 1
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
