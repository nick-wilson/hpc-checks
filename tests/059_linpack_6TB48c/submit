#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=059_linpack_6TB48c
testd=050_linpack
failmetric=1000.0

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$testd"
tmp=tmp
script=run.pbs
csv="$BASE/results.csv"

tst=""
if [ x"$MULTI" == x ] ; then
 # Only have one test in queue at a time
 tst=`qstat | awk '{if ( $2 == "'$pbsname'" ) {print $0}}'`
fi
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ncpus=48:mem=5500gb
#PBS -l walltime=1:00:00
#PBS -j oe
#PBS -P 90000001
#PBS -q largemem

set -e

failmetric="$failmetric"
if [ -d "\$PBS_O_WORKDIR" ] ; then cd "\$PBS_O_WORKDIR" ; fi

unset OMP_NUM_THREADS
export KMP_AFFINITY="granularity=fine,compact"
PATH=/opt/intel/composer_xe_2015.0.090/mkl/benchmarks/linpack:\$PATH ; export PATH

echo clean node memory
$datadir/drop_caches
memhog 90g > /dev/null
for f in meminfo buddyinfo vmstat zoneinfo ; do cat /proc/\$f > proc.\$f ; done
numastat -n > numastat-n
numastat -m > numastat-m
cat /sys/kernel/debug/extfrag/extfrag_index > extfrag_index

echo run warmup
nohup xlinpack_xeon64 $datadir/lininput_warmup < /dev/null > /dev/null 2>&1
echo run production
nohup xlinpack_xeon64 $datadir/lininput_production < /dev/null > xlinpack_xeon64.\$PBS_JOBID.stdout 2>&1

metric=\`grep "^96000 .* pass$" xlinpack_xeon64.\$PBS_JOBID.stdout | awk '{print \$5}'\`
echo metric=\"\$metric\"

echo check residual
grep '^Residual checks' xlinpack_xeon64.\$PBS_JOBID.stdout
grep '^Residual checks PASSED' xlinpack_xeon64.\$PBS_JOBID.stdout

echo check for throttling
dmesg  | grep "Package temperature above threshold" && echo FAIL && exit 1 || echo OK

echo check performance
echo metric: \$metric
echo \$metric | awk '{if ( \$1 > '\$failmetric' ) {printf "PASS\n"}}' | grep PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
