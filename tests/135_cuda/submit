#!/bin/sh

# Test settings
BASE=/home/projects/benchmarks/workload
test=135_cuda
version=${VERSION:-10.1}

# run on any host
target=1
# run on host specified on command line
pbsname="$test"
if [ x"$1" != x ] ; then target="host=$1" ; pbsname="${test}_${1}" ; fi

# Environment settings
PATH="${PATH}:/app/pbs/bin:/opt/pbs/bin" ; export PATH

# Script settings
d=`date +%Y/%m/%d/%H/%M/%S`
rundir="$BASE/run/$d/$test"
datadir="$BASE/data/$test"
script=run.pbs
csv="$BASE/results.csv"

tst=""
if [ x"$MULTI" == x ] ; then
 # Only have one test in queue at a time
 tst=`qstat | awk '{if ( $2 == "'$pbsname'" ) {print $0}}'`
fi
if [ x"$tst" != x ] ; then exit ; fi

# Prepare and submit test
mkdir -p $rundir && cd $rundir || exit

cat << EOF > run.pbs
#!/bin/bash
#PBS -N $pbsname
#%@FUJITSU:NSCC:CONTINUOUS_PERFORMANCE_TESTING@%#
#PBS -l select=${target}:ngpus=1:ncpus=24:mem=96gb
#PBS -l walltime=0:15:00
#PBS -j oe
#PBS -P 90000001
#PBS -q gpu

set -e

if [ -d "\$PBS_O_WORKDIR" ] ; then cd "\$PBS_O_WORKDIR" ; fi

echo == nvidia-smi
nvidia-smi -q

echo == check persistence mode ==
nvidia-smi -q | egrep 'Persistence Mode[[:space:]]*:[[:space:]]Enabled' || { echo ERROR: Persistence Mode ; echo FAIL ; exit 1 ; }
echo == check clock speed ==
nvidia-smi -q -d CLOCK | grep --after-context=4 'Max Clocks' | egrep 'Graphics[[:space:]]*:[[:space:]]*875 MHz' || { echo ERROR: Clock speed ; echo FAIL ; exit 1 ; }
echo == change that normal user can set clock speed ==
nvidia-smi -ac 3004,810 || { echo ERROR: Change clock speed failed ; echo FAIL ; exit 1 ; }
echo == set clock speed back to correct value ==
nvidia-smi -ac 3004,875
echo == check for GPU memory ECC errors
nvidia-smi -q -d PAGE_RETIREMENT  | egrep 'Pending[[:space:]]*:[[:space:]]*YES' && { echo ERROR: GPU memory ECC errors ; echo FAIL ; exit 1 ; }

module load cuda/$version
tar xf $datadir/samples.tgz
cd samples
make
for exe in ./bin/x86_64/linux/release/* ; do echo == running \$exe ; eval \$exe ; done
echo PASS
EOF

jobid=`qsub $QSUB_ARGS run.pbs`
if [ x"$ECHO_JOBID" != x ] ; then echo $jobid ; fi
echo "$test , $jobid , Q , STIME , UNKNOWN , 0 , 00:00:00 , 0.0 , HOSTNAME , $PWD " >> "$csv"
